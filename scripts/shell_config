scripts="$HOME/nixos/scripts"

alias scrub="$scripts/scrub.sh" #to clean the installation
alias ct="$scripts/clone_terminal.sh"
alias nsp="nix-shell -p"
alias rebuild="$scripts/rebuild.sh"
alias edit="$scripts/edit.sh"
alias copy="xclip -i -selection clipboard"
alias chromevpn='ssh -ND 1080 bathhouse & chromium --proxy-server="socks5://localhost:1080"'

alias m="micro"
alias lc="fc -nl -1 | tr -d '[:cntrl:]' | sed -e 's/^[ \t]*//' |  xclip -selection clipboard"
alias clear="echo -e '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n' && clear"

alias bd="btm -C $HOME/nixos/apps/bottom/debug.toml"
alias bf="btm -C $HOME/nixos/apps/bottom/full.toml"

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

nspr() {
    if [ -z "$1" ]; then
        echo "Usage: nspr <package> [command]"
        return 1
    fi
    nix-shell -p "$1" --run "$1"
}

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
. /etc/bash_completion
fi

bind 'set show-all-if-ambiguous on'
bind 'TAB:menu-complete'

# for calcifer clipboard
# export RUSTFLAGS=--cfg=web_sys_unstable_apis
export YAZI_CONFIG_HOME=$HOME/nixos/apps/yazi

export STARSHIP_CONFIG=$HOME/nixos/apps/starship/config.toml
eval "$(starship init bash)"

clear

if git rev-parse --is-inside-work-tree &> /dev/null; then
    onefetch
fi
